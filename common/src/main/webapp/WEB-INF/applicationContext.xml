<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd

		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd

		http://go.warwick.ac.uk/elab-schemas/filterstack http://go.warwick.ac.uk/elab-schemas/filters.xsd">

  <import resource="properties-context.xml"/>
  <import resource="persistence-context.xml"/>

  <!-- Needed to enable use of the uk.ac.warwick.spring.Wire object -->
  <bean class="uk.ac.warwick.spring.SpringConfigurer" lazy-init="false"/>

  <!-- fire up annotation driven everything -->
  <context:annotation-config/>
  <context:component-scan base-package="uk.ac.warwick.tabula.web.controllers.common"/>
  <context:component-scan base-package="uk.ac.warwick.tabula.services"/>
  <context:component-scan base-package="uk.ac.warwick.tabula.data"/>
  <context:component-scan base-package="uk.ac.warwick.tabula.jobs"/>
  <context:component-scan base-package="uk.ac.warwick.tabula.notifications"/>
  <context:component-scan base-package="uk.ac.warwick.tabula.exams.grids.columns"/>
  <context:component-scan base-package="uk.ac.warwick.tabula.exams.grids.documents"/>

  <!-- enable component scan for mywarwick service -->
  <context:component-scan base-package="uk.ac.warwick.util.mywarwick"/>

  <!-- properties bean expected by mywarwick service -->
  <bean id="applicationPropertiesForMyWarwick" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="locations">
      <list>
        <value>classpath:/default.properties</value>
        <value>classpath:/tabula.properties</value>
      </list>
    </property>
  </bean>

  <!-- enable component scan for virusscan service -->
  <context:component-scan base-package="uk.ac.warwick.util.virusscan" />

  <!-- For sub-modules to implement their own component scanning -->
  <import resource="spring-component-scan-context.xml"/>

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
        p:basename="messages" p:alwaysUseMessageFormat="true"/>

  <bean id="defaultEventListener" class="uk.ac.warwick.tabula.events.CompositeEventListener" abstract="true">
    <constructor-arg index="0">
      <list>
        <bean class="uk.ac.warwick.tabula.events.SLF4JEventListener"/>
        <bean class="uk.ac.warwick.tabula.events.AuditLoggingEventListener"/>
        <bean class="uk.ac.warwick.tabula.events.DatabaseEventListener"/>
        <bean class="uk.ac.warwick.tabula.events.CacheClearingEventListener"/>
      </list>
    </constructor-arg>
  </bean>

  <import resource="event-listener-context.xml"/>

  <bean id="json" class="uk.ac.warwick.tabula.JsonObjectMapperFactory"/>


  <!-- Catches all exceptions that go through Spring.
    If an exception escapes Spring, it will go to the handler in web.xml,
    which is served by the ErrorController at /error/, which delegates to this.
    So this should be handling all exceptions.
   -->
  <bean id="defaultExceptionResolver" class="uk.ac.warwick.tabula.system.exceptions.ExceptionResolver" p:order="0"
        p:defaultView="errors/500" abstract="true">
    <property name="viewMappings">
      <map>
        <entry key="uk.ac.warwick.tabula.PermissionDeniedException" value="errors/permissionDenied"/>
        <entry key="uk.ac.warwick.tabula.ItemNotFoundException" value="errors/404"/>
        <entry key="uk.ac.warwick.tabula.services.MaintenanceModeEnabledException" value="errors/maintenance"/>
        <entry key="uk.ac.warwick.tabula.system.exceptions.FileUploadException" value="errors/fileUpload"/>
        <entry key="uk.ac.warwick.tabula.ParameterMissingException" value="errors/parameterMissing"/>
        <entry key="uk.ac.warwick.tabula.RequestBodyMissingException" value="errors/requestBodyMissing"/>
        <entry key="uk.ac.warwick.tabula.RequestFailedException" value="errors/requestFailed"/>
        <entry key="uk.ac.warwick.tabula.services.CannotPerformWriteOperationException" value="errors/readOnlyMasquerade"/>
        <entry key="uk.ac.warwick.tabula.services.ZipRequestTooLargeError" value="errors/zipTooBig"/>
        <entry key="uk.ac.warwick.tabula.api.web.filters.APILoginMethodMissingException" value="errors/apiLoginMethodMissing"/>
        <entry key="uk.ac.warwick.tabula.SubmitPermissionDeniedException" value="errors/assignment_permissionDenied"/>
        <entry key="uk.ac.warwick.tabula.commands.cm2.assignments.markers.IllegalMarkingStateException" value="errors/marker_online_feedback_illegal_state"/>
      </map>
    </property>
  </bean>

  <import resource="exception-resolver-context.xml"/>

  <bean id="defaultExceptionHandler" class="uk.ac.warwick.tabula.system.exceptions.CompositeExceptionHandler" abstract="true">
    <constructor-arg index="0">
      <list>
        <bean class="uk.ac.warwick.tabula.system.exceptions.LoggingExceptionHandler"/>
        <bean class="uk.ac.warwick.tabula.system.exceptions.EmailingExceptionHandler"/>
      </list>
    </constructor-arg>
  </bean>

  <import resource="exception-handler-context.xml"/>

  <!-- validation -->
  <bean id="validatorFactory" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
        p:validationMessageSource-ref="messageSource"/>

  <bean id="validator" class="uk.ac.warwick.tabula.validators.CompositeValidator">
    <constructor-arg>
      <list>
        <ref bean="validatorFactory"/>
      </list>
    </constructor-arg>
  </bean>

  <util:list id="customConverters">
    <bean class="uk.ac.warwick.tabula.data.convert.DepartmentCodeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ModuleCodeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AssignmentIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ExamIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AbstractMeetingRecordIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MeetingRecordIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AssessmentComponentIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AssessmentGroupIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AssignmentFeedbackIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ExamFeedbackIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MarkerFeedbackIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.FeedbackTemplateIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SubmissionIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.FileAttachmentIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.FileAttachmentTokenIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MarkingWorkflowIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MemberUniversityIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MemberNoteIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ExtenuatingCircumstancesIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.PermissionConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ClassConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.UserConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ExtensionIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AcademicYearConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.RoleDefinitionConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.RoleOverrideConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.StringToMarkingMethod"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MeetingFormatConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.StudentRelationshipTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.StudentRelationshipIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupSetIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupEventIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupEventOccurrenceIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.DepartmentSmallGroupSetIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.DepartmentSmallGroupIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.DayOfWeekConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.NumberConverterFactory"/>
    <bean class="uk.ac.warwick.tabula.data.convert.StudentCourseDetailsConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.StudentCourseYearDetailsIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupSelfSignUpStateConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.CourseCodeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.RouteCodeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.JodaLocalDateConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AttendanceStateConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ModeOfAttendanceCodeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SitsStatusCodeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.HibernateOrderConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.AssessmentTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.CourseTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.DepartmentFilterRuleConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AbsenceTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.NotificationIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AttendanceMonitoringPointStyleConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AttendanceMonitoringSchemeIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AttendanceMonitoringPointTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AttendanceMonitoringPointIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AttendanceMonitoringTemplateIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AttendanceMonitoringTemplatePointIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupSetFilterConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.JobInstanceIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.TimetableEventTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupFormatConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupAllocationMethodConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupMembershipStyleConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.ExtensionConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.forms.ExtensionStateConverter"/>
    <bean class="uk.ac.warwick.tabula.commands.TimeFilterConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.WorkflowCategoryConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.CM2MarkingWorkflowIdConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.markingworkflow.StringToMarkingWorkflowType"/>
    <bean class="uk.ac.warwick.tabula.data.model.markingworkflow.StringToMarkingWorkflowStage"/>
    <bean class="uk.ac.warwick.tabula.data.convert.AssignmentInfoFilterConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SubmissionAndFeedbackInfoFilterConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.AssignmentAnonymityConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.markingworkflow.ModerationSamplerConverter"/>
    <bean class="uk.ac.warwick.tabula.commands.cm2.assignments.markers.MarkerAdjustmentTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.commands.cm2.assignments.markers.MarkerAdjustmentDirectionConverter"/>
    <bean class="uk.ac.warwick.tabula.exams.grids.columns.StringToExamGridStudentIdentificationColumnValue"/>
    <bean class="uk.ac.warwick.tabula.exams.grids.columns.StringToExamGridDisplayModuleNameColumnValue"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MeetingRecordApprovalTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.SyllabusPlusLocationConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MarkPointConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MarkingDescriptorConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.mitcircs.IssueTypeConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.mitcircs.MitCircsContactConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.mitcircs.MitigatingCircumstancesSubmissionStateConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MitigatingCircumstancesKeyConverter"/>
    <bean class="uk.ac.warwick.tabula.data.convert.MitigatingCircumstancesNoteIdConverter" />
    <bean class="uk.ac.warwick.tabula.data.convert.MitigatingCircumstancesMessageIdConverter" />
    <bean class="uk.ac.warwick.tabula.data.convert.MitigatingCircumstancesPanelConverter" />
    <bean class="uk.ac.warwick.tabula.data.model.mitcircs.MitigatingCircumstancesGradingConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.mitcircs.MitCircsExamBoardRecommendationConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.mitcircs.MitigatingCircumstancesRejectionReasonConverter"/>
    <bean class="uk.ac.warwick.tabula.data.model.mitcircs.MitigatingCircumstancesAcuteOutcomeConverter"/>
  </util:list>

  <bean id="typeConverter"
        class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    <description>
      Converts arguments in various places.
      Useful to convert @PathVariable arguments from String to the object it represents.

      Converters are used when binding request values to command.
      Formatters are used for displaying command values as a string in views. spring.bind uses formatters.
    </description>
    <property name="converters" ref="customConverters"/>
    <property name="formatters">
      <list>
        <bean class="uk.ac.warwick.tabula.data.convert.JodaLocalDateConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.JodaLocalTimeConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.JodaDateTimeConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.FileAttachmentIdConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.AssignmentIdConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.AssessmentComponentIdConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.ClassConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.AcademicYearConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.SmallGroupSetIdConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.MemberNoteIdConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.MemberUniversityIdConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.MeetingFormatConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.MeetingRecordApprovalTypeConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.MitigatingCircumstancesKeyConverter"/>
        <bean class="uk.ac.warwick.tabula.data.convert.MitigatingCircumstancesPanelConverter" />
      </list>
    </property>
  </bean>

  <!-- Resolves user from request but can also be used sparingly elsewhere to generate a CurrentUser from Users -->
  <bean id="currentUserInterceptor" class="uk.ac.warwick.tabula.system.CurrentUserInterceptor"/>

  <bean id="earlyRequestInfoInterceptor" class="uk.ac.warwick.tabula.system.EarlyRequestInfoInterceptor"/>
  <bean id="requestInfoInterceptor" class="uk.ac.warwick.tabula.system.RequestInfoInterceptor"/>

  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <ref bean="earlyRequestInfoInterceptor"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <ref bean="currentUserInterceptor"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <ref bean="requestInfoInterceptor"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="uk.ac.warwick.tabula.system.RequestBenchmarkingInterceptor"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="uk.ac.warwick.tabula.system.ConditionalInterceptor" p:excludePath="/static/*">
        <constructor-arg>
          <bean class="org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor" autowire="byName"/>
        </constructor-arg>
      </bean>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="uk.ac.warwick.tabula.system.ControllerPreRequestInterceptor"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="uk.ac.warwick.tabula.system.ConditionalHandlerInterceptorAdapter" p:excludePath="/static/*">
        <constructor-arg>
          <bean class="uk.ac.warwick.tabula.system.CacheControlInterceptor"/>
        </constructor-arg>
      </bean>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <bean class="uk.ac.warwick.tabula.system.CspInterceptor" />
    </mvc:interceptor>
  </mvc:interceptors>

  <bean id="propertyEditorRegistrar" class="uk.ac.warwick.tabula.system.CommonPropertyEditors"/>

  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"
        p:order="1"
        p:contentNegotiationManager-ref="contentNegotiationManager"
        p:useSuffixPatternMatch="false"/><!-- so that {pathvariables} match extensions at end of url -->

  <bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
        p:conversionService-ref="typeConverter"
        p:validator-ref="validator"
        p:propertyEditorRegistrar-ref="propertyEditorRegistrar"
        p:autoGrowNestedPaths="false"/>
  <bean id="requestMappingHandlerAdapter" class="uk.ac.warwick.tabula.system.HandlerAdapter" p:order="0"
        p:webBindingInitializer-ref="webBindingInitializer">
    <property name="customArgumentResolvers">
      <list>
        <bean class="uk.ac.warwick.tabula.system.CurrentUserMethodArgumentResolver"/>
      </list>
    </property>
    <property name="customPreReturnValueHandlers">
      <list>
        <bean class="uk.ac.warwick.tabula.system.MavReturnValueHandler"/>
        <bean class="uk.ac.warwick.tabula.system.XmlReturnValueHandler"/>
        <bean class="uk.ac.warwick.tabula.system.RenderableFileReturnValueHandler"/>
      </list>
    </property>
    <property name="customConverters" ref="customConverters"/>
    <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
  </bean>

  <bean id="defaultContentNegotiationManager" abstract="true" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"/>

  <import resource="content-negotiation-context.xml"/>

  <bean id="features" class="uk.ac.warwick.tabula.FeaturesImpl"/>

  <!-- get app server to handle static content -->
  <mvc:default-servlet-handler/>

  <bean id="characterEncodingFilter" class="org.springframework.web.filter.CharacterEncodingFilter"
        p:encoding="UTF-8" p:forceEncoding="true"/>

  <bean id="oAuthFilter" class="uk.ac.warwick.sso.client.oauth.OAuthFilter"/>
  <bean id="trustedApplicationFilter" class="uk.ac.warwick.sso.client.trusted.TrustedApplicationFilter"/>
  <bean id="acceptedUserSourceFilter" class="uk.ac.warwick.tabula.web.filters.AcceptedUserSourceFilter"/>

  <bean id="priorityTaskExecutionService" class="uk.ac.warwick.util.concurrency.TaskExecutionService" destroy-method="shutdown">
    <constructor-arg value="4" type="int"/>
  </bean>

  <bean id="studentMailSender" class="uk.ac.warwick.tabula.services.RedirectingMailSender">
    <constructor-arg ref="mailSender"/>
  </bean>

  <bean id="mailSender" class="uk.ac.warwick.util.mail.AsynchronousWarwickMailSender">
    <constructor-arg index="0" ref="priorityTaskExecutionService"/>
    <constructor-arg index="1">
      <bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="username" value="${mail.smtp.user}"/>
        <property name="password" value="${mail.smtp.password}"/>
        <property name="javaMailProperties">
          <props>
            <prop key="mail.smtp.from">${mail.smtp.from}</prop>
            <prop key="mail.smtp.user">${mail.smtp.user}</prop>
            <prop key="mail.smtp.password">${mail.smtp.password}</prop>
            <prop key="mail.smtp.host">${mail.smtp.host}</prop>
            <prop key="mail.smtp.port">${mail.smtp.port}</prop>
            <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
            <prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
            <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
          </props>
        </property>
      </bean>
    </constructor-arg>
  </bean>

  <filter-stack id="commonFilters" abstract="true" xmlns="http://go.warwick.ac.uk/elab-schemas/filterstack">
    <mapping name="all">
      <filter ref="characterEncodingFilter"/>
      <url-pattern>/*</url-pattern>
      <excluded-url-pattern>/static/*</excluded-url-pattern>
      <excluded-url-pattern>/favicon.ico</excluded-url-pattern>
      <excluded-url-pattern>*.ftl</excluded-url-pattern>
    </mapping>
    <mapping name="sso">
      <filter ref="ssoClientFilter"/>

      <!-- Intentionally before TrustedApplicationsFilter, we're only really bothered about people authenticating the old fashioned way -->
      <filter ref="acceptedUserSourceFilter"/>

      <filter ref="oAuthFilter"/>
      <filter ref="trustedApplicationFilter"/>
      <url-pattern>/*</url-pattern>
      <excluded-url-pattern>/static/*</excluded-url-pattern>
      <excluded-url-pattern>/favicon.ico</excluded-url-pattern>
      <excluded-url-pattern>*.ftl</excluded-url-pattern>
      <excluded-url-pattern>/test/*</excluded-url-pattern>
      <excluded-url-pattern>/service/*</excluded-url-pattern>

      <!-- FIXME These should really be in web's filters-context.xml, but that'd require XML trickery -->
      <excluded-url-pattern>/profiles/timetable/ical</excluded-url-pattern>
      <excluded-url-pattern>/profiles/timetable/ical/*</excluded-url-pattern>
    </mapping>
    <mapping name="forceSysadmin">
      <filter ref="forceLoginFilter"/>
      <filter ref="sysadminGroupFilter"/>
      <url-pattern>/sysadmin/*</url-pattern>
      <excluded-url-pattern>*.ftl</excluded-url-pattern>
    </mapping>
    <!--<mapping name="postDataLogging">
      <filter ref="postDataLoggingFilter" />
      <url-pattern>/*</url-pattern>
    </mapping>-->
    <mapping>
      <filter ref="xfoFilter"/>
      <url-pattern>/*</url-pattern>
    </mapping>
    <mapping>
      <filter ref="csrfFilter"/>
      <url-pattern>/*</url-pattern>
      <excluded-url-pattern>/static/*</excluded-url-pattern>
      <excluded-url-pattern>/favicon.ico</excluded-url-pattern>
      <excluded-url-pattern>*.ftl</excluded-url-pattern>
      <excluded-url-pattern>/error/*</excluded-url-pattern>
    </mapping>
    <mapping>
      <filter ref="staticContentHeadersFilter"/>
      <url-pattern>/static/*</url-pattern>
    </mapping>
  </filter-stack>

  <import resource="filters-context.xml"/>

  <bean id="forceLoginFilter" class="uk.ac.warwick.sso.client.ForceLoginFilter"/>
  <bean id="xfoFilter" class="uk.ac.warwick.tabula.web.filters.XfoFilter"/>
  <bean id="csrfFilter" class="uk.ac.warwick.sso.client.CSRFFilter" p:reportOnlyMode="true" />
  <bean id="staticContentHeadersFilter" class="uk.ac.warwick.tabula.web.filters.StaticContentHeadersFilter"/>

  <bean id="postDataLoggingFilter" class="uk.ac.warwick.tabula.web.filters.PostDataLoggingFilter"/>

  <bean id="sysadminGroupFilter" class="uk.ac.warwick.sso.client.UserInWebGroupFilter"
        p:group="${permissions.admin.group}"
        p:groupService-ref="groupService"/>
  <!-- FIXME groupservice wont be switched out for a maintenance version -->

  <bean id="userLookup" class="uk.ac.warwick.tabula.services.SwappableUserLookupService">
    <constructor-arg ref="realUserLookup"/>
  </bean>
  <bean id="groupService" factory-bean="userLookup" factory-method="getGroupService"/>

  <bean id="realUserLookup" class="uk.ac.warwick.tabula.services.UserLookupServiceImpl" autowire-candidate="false">
    <constructor-arg ref="userLookupDelegate"/>
  </bean>

  <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"
        p:templateLoaderPath="/WEB-INF/freemarker/"
        p:configuration-ref="freemarkerConfiguration"/>

  <bean id="dateTimeFormatter" class="org.joda.time.format.ISODateTimeFormat" factory-method="dateTimeNoMillis"/>

  <bean id="urlMethodModel" class="uk.ac.warwick.tabula.web.views.UrlMethodModel"/>
  <bean id="defaultFreemarkerConfiguration" class="uk.ac.warwick.tabula.web.views.ScalaFreemarkerConfiguration" abstract="true">
    <property name="sharedVariables">
      <map>
        <entry key="cm1Context" value="/${cm1.prefix}"/>
        <entry key="cm2Context" value="/${cm2.prefix}"/>
        <entry key="url" value-ref="urlMethodModel"/>
        <entry key="topLevelUrl" value="${toplevel.url}"/>
        <entry key="rootUrl" value="${toplevel.url}${module.context}/"/>
        <entry key="componentName" value="${module.name}"/>
        <entry key="activeSpringProfiles" value="${spring.profiles.active}"/>
        <entry key="userlookup">
          <bean class="uk.ac.warwick.tabula.web.views.UserLookupTag"/>
        </entry>
        <entry key="uriParser">
          <bean class="uk.ac.warwick.tabula.web.views.UriParser"/>
        </entry>
        <entry key="manageRole">
          <bean class="uk.ac.warwick.tabula.web.views.ManageRoleTag"/>
        </entry>
        <entry key="permissions">
          <bean class="uk.ac.warwick.tabula.web.views.PermissionFunction"/>
        </entry>
        <entry key="showIntro">
          <bean class="uk.ac.warwick.tabula.web.views.ShowIntroFunction"/>
        </entry>
        <entry key="introHash">
          <bean class="uk.ac.warwick.tabula.web.views.IntroHashFunction"/>
        </entry>
        <entry key="theYear">
          <bean class="uk.ac.warwick.tabula.web.views.TheYear"/>
        </entry>
        <entry key="usersWithRole">
          <bean class="uk.ac.warwick.tabula.web.views.UsersWithRoleFunction"/>
        </entry>
        <entry key="features" value-ref="features"/>
        <entry key="appBuildDate">
          <bean factory-bean="dateTimeFormatter" factory-method="parseDateTime">
            <constructor-arg value="${build.time}"/>
          </bean>
        </entry>
        <entry key="dateBuilder">
          <bean class="uk.ac.warwick.tabula.helpers.DateBuilder"/>
        </entry>
        <entry key="timeBuilder">
          <bean class="uk.ac.warwick.tabula.helpers.TimeBuilder"/>
        </entry>
        <entry key="intervalFormatter">
          <bean class="uk.ac.warwick.tabula.helpers.IntervalFormatter"/>
        </entry>
        <entry key="durationFormatter">
          <bean class="uk.ac.warwick.tabula.helpers.DurationFormatterTag"/>
        </entry>
        <entry key="durationPercentage">
          <bean class="uk.ac.warwick.tabula.helpers.DurationPercentageTag"/>
        </entry>
        <entry key="weekRangesFormatter">
          <bean class="uk.ac.warwick.tabula.helpers.WeekRangesFormatterTag"/>
        </entry>
        <entry key="weekRangesDumper">
          <bean class="uk.ac.warwick.tabula.helpers.WeekRangesDumperTag"/>
        </entry>
        <entry key="mapGet">
          <bean class="uk.ac.warwick.tabula.helpers.FreemarkerMapHelper"/>
        </entry>
        <entry key="wholeWeekFormatter">
          <bean class="uk.ac.warwick.tabula.helpers.WholeWeekFormatterTag"/>
        </entry>
        <entry key="dateToWeekNumber">
          <bean class="uk.ac.warwick.tabula.helpers.DateToWeekNumberTag"/>
        </entry>
        <entry key="userSetting">
          <bean class="uk.ac.warwick.tabula.web.views.UserSettingFunction"/>
        </entry>
        <entry key="attendanceMonitoringCheckpointFormatter">
          <bean class="uk.ac.warwick.tabula.helpers.AttendanceMonitoringCheckpointFormatter"/>
        </entry>
        <entry key="phoneNumberFormatter">
          <bean class="uk.ac.warwick.tabula.helpers.PhoneNumberFormatter"/>
        </entry>
        <entry key="mimeTypeDetector">
          <bean class="uk.ac.warwick.tabula.helpers.MimeTypeDetectorTag"/>
        </entry>
        <entry key="googleAnalyticsCode" value="${tabula.analytics.code}"/>
        <entry key="nonce">
          <bean class="uk.ac.warwick.tabula.system.CspNonceTag" />
        </entry>
      </map>
    </property>
  </bean>

  <import resource="freemarker-configuration-context.xml"/>

  <bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
    <property name="attributes">
      <map>
        <entry key="freemarkerConfiguration" value-ref="freemarkerConfiguration"/>
      </map>
    </property>
  </bean>

  <bean id="redirectViewResolver" class="uk.ac.warwick.tabula.web.views.RedirectViewResolver"
        p:toplevelUrl="${toplevel.url}"
        p:order="1"/>
  <bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"
        p:order="2"/>

  <bean id="parser" class="org.springframework.expression.spel.standard.SpelExpressionParser"/>

  <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>

  <!-- ActiveMQ -->
  <bean id="abstractQueue" abstract="true" factory-bean="queueProvider" factory-method="getQueue"/>

  <bean id="settingsSyncTopic" parent="abstractQueue">
    <constructor-arg value="SynchronisedSettings"/>

    <!-- We don't need this to be persistent, it's for setting feature flags, maintenance mode etc -->
    <property name="persistent" value="false"/>

    <!-- This isn't a Queue, it's a Topic - we are effectively broadcasting -->
    <property name="pubSub" value="true"/>
    <property name="pubSubNoLocal" value="true"/>

    <property name="messageConverter">
      <bean class="uk.ac.warwick.util.queue.conversion.JsonMessageConverter">
        <property name="annotatedClasses">
          <list>
            <value>uk.ac.warwick.tabula.FeaturesMessage</value>
            <value>uk.ac.warwick.tabula.services.MaintenanceModeMessage</value>
            <value>uk.ac.warwick.tabula.services.EmergencyMessage</value>
            <value>uk.ac.warwick.tabula.services.permissions.PermissionsCacheBusterMessage</value>
            <value>uk.ac.warwick.tabula.services.HibernateStatisticsMessage</value>
            <value>uk.ac.warwick.tabula.services.UserGroupMembershipHelperCacheBusterMessage</value>
          </list>
        </property>
      </bean>
    </property>
  </bean>

  <!-- Listeners for settingsSyncTopic -->
  <bean class="uk.ac.warwick.tabula.FeatureFlagListener"/>
  <bean class="uk.ac.warwick.tabula.services.MaintenanceModeListener"/>
  <bean class="uk.ac.warwick.tabula.services.EmergencyMessageListener"/>
  <bean class="uk.ac.warwick.tabula.services.SSOMaintenanceModeListener"/>
  <bean class="uk.ac.warwick.tabula.services.UserGroupMembershipHelperCacheService"/>

  <!-- Expose local properties as system properties -->
  <bean
    class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property
      name="targetObject">
      <!-- System.getProperties() -->
      <bean
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="getProperties"/>
      </bean>
    </property>
    <property
      name="targetMethod"
      value="putAll"/>
    <property
      name="arguments">
      <!-- The new Properties -->
      <util:properties>
        <prop key="warwick.ehcache.config">/ehcache-config.xml</prop>
        <prop key="warwick.memcached.config">/memcached.properties</prop>
        <prop key="ssoclient.cache.strategy">${tabula.cacheStrategy}</prop>
      </util:properties>
    </property>
  </bean>

  <!-- @Scheduled -->
  <task:annotation-driven executor="taskExecutor" scheduler="taskScheduler"/>
  <task:executor id="taskExecutor" pool-size="5"/>
  <task:scheduler id="taskScheduler" pool-size="10"/>

  <beans profile="test">
    <bean id="userLookupDelegate" class="uk.ac.warwick.tabula.MockUserLookup" autowire-candidate="false"/>

    <!-- This is the default embedded broker -->
    <bean id="queueProvider" class="uk.ac.warwick.util.queue.activemq.ActiveMQQueueProvider" factory-method="createEmbeddedBroker"/>

    <bean id="ssoClientFilter" class="uk.ac.warwick.sso.client.SSOClientFilter"
          p:userLookup-ref="userLookup"
          p:configLocation="/tabula-sso-config.xml"/>
  </beans>

  <beans profile="sandbox">
    <bean id="userLookupDelegate" class="uk.ac.warwick.tabula.services.SandboxUserLookup" autowire-candidate="false">
      <constructor-arg>
        <bean class="uk.ac.warwick.userlookup.UserLookup" autowire-candidate="false"
              p:ssosUrl="${ssoclient.ssos.url}"
              p:groupServiceLocation="${ssoclient.webgroups.url}"/>
      </constructor-arg>
    </bean>
  </beans>

  <beans profile="dev,production">
    <bean id="userLookupDelegate" class="uk.ac.warwick.userlookup.UserLookup" autowire-candidate="false"
          p:ssosUrl="${ssoclient.ssos.url}"
          p:groupServiceLocation="${ssoclient.webgroups.url}"
          p:httpConnectionTimeout="${ssoclient.net.connection-timeout.millis}"
          p:httpDataTimeout="${ssoclient.net.data-timeout.millis}"/>
  </beans>

  <beans profile="dev,sandbox,production">
    <!-- This may still be an embedded broker (i.e. for dev) but probably has JMX enabled -->
    <bean id="queueProvider" class="uk.ac.warwick.util.queue.activemq.ActiveMQQueueProvider">
      <constructor-arg value="${activemq.broker}"/>
      <constructor-arg value="${activemq.user}"/>
      <constructor-arg value="${activemq.pass}"/>
    </bean>

    <bean id="ssoConfigLoader" class="uk.ac.warwick.sso.client.SSOConfigLoader"/>
    <bean id="ssoConfiguration" factory-bean="ssoConfigLoader" factory-method="loadSSOConfig">
      <constructor-arg value="/tabula-sso-config.xml"></constructor-arg>
    </bean>

    <bean id="ssoClientFilter" class="uk.ac.warwick.sso.client.SSOClientFilter"
          p:userLookup-ref="userLookup"
          p:config-ref="ssoConfiguration"/>

    <bean name="trustedApplicationsManager" class="uk.ac.warwick.sso.client.trusted.SSOConfigTrustedApplicationsManager">
      <constructor-arg ref="ssoConfiguration"/>
    </bean>
  </beans>

  <beans profile="web">

  </beans>

  <beans profile="dev">
  </beans>

  <beans profile="sandbox,production">
  </beans>

  <beans profile="dev,sandbox,production,console">

  </beans>

  <beans profile="dev,sandbox,production">
    <!-- Caches -->
    <bean id="userGroupCacheBean"
          class="uk.ac.warwick.tabula.services.UserGroupMembershipCacheBean"
          abstract="true"/>

    <bean id="Assignment-_members" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.Assignment"
          p:path="_members"/>
    <bean id="Exam-_members" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.Exam"
          p:path="_members"/>
    <bean id="SmallGroupSet-_membersGroup" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.groups.SmallGroupSet"
          p:path="_membersGroup"/>
    <bean id="SmallGroup-_studentsGroup" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.groups.SmallGroup"
          p:path="_studentsGroup"/>
    <bean id="DepartmentSmallGroupSet-_membersGroup" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.groups.DepartmentSmallGroupSet"
          p:path="_membersGroup"/>
    <bean id="DepartmentSmallGroup-_studentsGroup" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.groups.DepartmentSmallGroup"
          p:path="_studentsGroup"/>
    <bean id="StaffMember-_assistantsGroup" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.StaffMember"
          p:path="_assistantsGroup"/>
    <bean id="SmallGroupEvent-_tutors" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.groups.SmallGroupEvent"
          p:path="_tutors"/>
    <bean id="AttendanceMonitoringScheme-_members" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.attendance.AttendanceMonitoringScheme"
          p:path="_members"/>
    <bean id="MarkingWorkflow-_firstMarkers" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.MarkingWorkflow"
          p:path="_firstMarkers"/>
    <bean id="MarkingWorkflow-_secondMarkers" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.MarkingWorkflow"
          p:path="_secondMarkers"/>
    <bean id="StageMarkers-_markers" parent="userGroupCacheBean"
          p:runtimeClass="uk.ac.warwick.tabula.data.model.markingworkflow.StageMarkers"
          p:path="_markers"/>

    <bean id="defaultTilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"
          p:definitionsFactoryClass="uk.ac.warwick.tabula.web.views.ImpliedDefinitionsFactory" abstract="true">
      <property name="definitions">
        <list>
          <value>/WEB-INF/defs/common-views.xml</value>
        </list>
      </property>
      <!--
      <property name="tilesProperties">
        <props>
          <prop key="#{T(org.apache.tiles.definition.DefinitionsFactory).DEFINITION_DAO_INIT_PARAM}">
            org.apache.tiles.definition.dao.ResolvingLocaleUrlDefinitionDAO
          </prop>
        </props>
      </property>
      -->
    </bean>

    <import resource="tiles-context.xml"/>
  </beans>

</beans>
