version: '3'

services:
  tomcat:
    build: ./docker
    container_name: tabula-tomcat
    ports:
      - "8080:8080" # For the manager app (deploying) and JRebel remote
      - "8787:8787" # For connecting a remote debugger
    volumes:
      - ./docker/data/certbot/conf:/etc/letsencrypt
    depends_on:
      - nginx
      - certbot
      - db
      - elasticsearch
      - activemq
      - objectstore
      - memcached
    networks:
      - tabula-internal-net
  nginx:
    image: "nginx:1.15-alpine"
    restart: unless-stopped
    volumes:
      - ./docker/data/nginx:/etc/nginx/conf.d
      - ./docker/data/certbot/conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - tabula-internal-net
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./docker/data/certbot/conf:/etc/letsencrypt
      - ./docker/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - tabula-internal-net
  db:
    image: "postgres:11-alpine"
    container_name: tabula-db
    restart: unless-stopped
    ports:
      - "5432:5432" # For connecting to the database for local management
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: tabula
      POSTGRES_PASSWORD: a really strong password, not a horrible weak one
      POSTGRES_DB: tabula
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - tabula-internal-net
  elasticsearch:
    image: "elasticsearch:6.5.4" # No 6.x alpine yet
    container_name: tabula-elasticsearch
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      cluster.name: tabula
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    networks:
      - tabula-internal-net
  activemq:
    image: "rmohr/activemq:5.15.6-alpine"
    container_name: tabula-activemq
    restart: unless-stopped
    volumes:
      - ./docker/conf/activemq:/opt/activemq/conf
      - activemq:/opt/activemq/data
    networks:
      - tabula-internal-net
  objectstore:
    image: "bouncestorage/swift-aio:2.21.0"
    container_name: tabula-objectstorage
    restart: unless-stopped
    volumes:
      - swift:/swift/nodes
    networks:
      - tabula-internal-net
  memcached:
    image: "memcached:1.5-alpine"
    container_name: tabula-memcached
    restart: unless-stopped
    networks:
      - tabula-internal-net

volumes:
  postgres:
  elasticsearch:
  swift:
  activemq:

networks:
  tabula-internal-net:
